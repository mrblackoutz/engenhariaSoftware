@startuml
actor Cliente

boundary CancelaReservaGUI <<boundary>>
control ControladorCancelaReserva <<controller>>
collections "reserva : Reserva" as reservas
participant Reserva
participant Pagamento
participant BookingMesas
participant Restaurante

Cliente -> CancelaReservaGUI : cancelarReserva()
activate CancelaReservaGUI
CancelaReservaGUI -> ControladorCancelaReserva : cancelarReserva(reservaId)
activate ControladorCancelaReserva

ControladorCancelaReserva -> reservas : buscarReserva(reservaId)
activate reservas
reservas -> Reserva : BuscaInfoReserva()
activate Reserva
Reserva --> reservas : Retorna Info
deactivate Reserva
reservas --> ControladorCancelaReserva : dadosReserva
deactivate reservas

alt Reserva com pagamento
    ControladorCancelaReserva -> Pagamento : verificarPagamento(reservaId)
    activate Pagamento
    Pagamento -> Pagamento : processarEstorno()
end
deactivate Pagamento

ControladorCancelaReserva -> Reserva : atualizarStatus("Cancelada")
activate Reserva
Reserva -> BookingMesas : liberarMesa(data, hora, mesa)
activate BookingMesas
deactivate BookingMesas
Reserva -> Restaurante : notificarCancelamento(reservaId)
activate Restaurante
deactivate Restaurante
Reserva --> ControladorCancelaReserva : ConfirmaSucessoCancelamento
deactivate Reserva

ControladorCancelaReserva -> CancelaReservaGUI : confirmarCancelamento()
deactivate ControladorCancelaReserva
deactivate CancelaReservaGUI

@enduml
